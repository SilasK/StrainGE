#!/usr/bin/env python
import argparse
import numpy as np
import kmertools
import h5py


parser = argparse.ArgumentParser()
parser.add_argument("-o", "--output", help="pangenome output hdf5 file")
parser.add_argument("--K", type=int, default=kmertools.DEFAULT_K, help="Kmer size")
parser.add_argument("--fingerprint", "-f", action="store_true", help="use MinHash fingerprints rather than whole genomes")
parser.add_argument('strains', nargs='+', help='kmerized strain hdf5 or npz files')
args = parser.parse_args()

panKmerSet = None

with h5py.File(args.output, 'w') as h5:
    for s in args.strains:
        name = kmertools.nameFromPath(s)
        print name

        kset = kmertools.kmerSetFromFile(s)

        if args.fingerprint:
            kset = kset.fingerprintAsKmerSet()

        strainGroup = h5.create_group(name)

        kset.save_hdf5(strainGroup, compress="gzip")

        if panKmerSet is None:
            panKmerSet = kset
        else:
            panKmerSet = panKmerSet.mergeKmerSet(kset)

    panKmerSet.save_hdf5(h5, compress="gzip")




